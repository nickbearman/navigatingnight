[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Navigating the Night",
    "section": "",
    "text": "Welcome\nThis is the website for Navigating the Night, a workshop at GISRUK2024 given by Dr. Elisabetta Pietrostefani from the University of Liverpool, sponsored by the RGS-IBG Quantitative Methods Research Group (QMRG). The theme of the GISRUK 2024 is GIS for public good: data, theory, policy.\nThis workshop introduces students to raster data focusing on night lights. Night time satellite images show luminosity - i.e. the brightness of a place at night. The idea is that luminosity correlates strongly with economic activity and can be especially useful in data poor contexts where other economic data is not collected.\nThe website is free to use and is licensed under the Attribution-NonCommercial-NoDerivatives 4.0 International. A compilation of this web course is hosted as a GitHub repository that you can access:"
  },
  {
    "objectID": "mapraster.html#raster-data",
    "href": "mapraster.html#raster-data",
    "title": "Raster data",
    "section": "Raster Data",
    "text": "Raster Data\nRaster data is a digital image format that represents data as a grid of individual pixels, with each pixel containing a specific value or color information.\n\nSquare grid of pixels.\nPixel values can represent continuous or categorical variables:\n\nDivides 2-D space into regular cells - pixels\nEach cell has a single value\n\nValues assigned according to value at mean, centre point, or some other rule"
  },
  {
    "objectID": "mapraster.html#data-types",
    "href": "mapraster.html#data-types",
    "title": "Raster data",
    "section": "Data Types",
    "text": "Data Types\n\nGrayscale Rasters\nGrayscale raster data is a type of digital image representation that uses varying shades of gray to depict the intensity or brightness of a particular phenomenon at different locations. In grayscale images, pixel values typically range from 0 (black) to 255 (white), with intermediate values representing different levels of gray. These pixel values can represent continuous data, making grayscale rasters suitable for visualizing and analyzing phenomena where intensity or variation needs to be conveyed, such as medical X-rays, satellite nightlights data, or other scenarios where the focus is on quantifying the degree of a single attribute without using color.\nExample: Nightlights Data\nNightlights data can be represented as a grayscale raster, where darker areas indicate lower levels of artificial light, and lighter areas represent higher levels of artificial light. The pixel values may represent the radiance or luminance values of nighttime lights. Satellite-based nightlights data is used for various applications, such as monitoring urban development, assessing light pollution, and understanding human activity patterns at night.\n\n\n\n\n\n\n\nMultispectral Rasters\nMultispectral rasters are a type of digital image representation that incorporates multiple spectral bands or channels to capture a diverse range of information about a scene or phenomenon. In multispectral rasters, each channel represents a specific part of the electromagnetic spectrum, such as visible light, near-infrared, or thermal infrared. By combining these spectral bands, multispectral data provides a comprehensive view of the landscape, enabling analysis of various aspects like vegetation health, land use, or changes in urban and rural conditions. This type of raster data is commonly used in applications such as remote sensing, agriculture, and natural resource management, where a nuanced understanding of different attributes of the environment is essential.\nExample: Landsat Satellite Imagery\nLandsat satellite imagery, with its multispectral bands, is extensively used for environmental monitoring. It allows for tracking changes in land cover, assessing vegetation health, monitoring water quality, and detecting forest fires. Researchers and environmental agencies use multispectral data to make informed decisions regarding conservation and resource management.\n\n\n\n\n\n\n\nColor Rasters\nColour rasters are a digital image representation that utilizes the combination of three primary colour channels: red, green, and blue (RGB) to create a full range of colors. Each pixel in a colour raster is assigned values for these three color channels, which determine the pixel’s color.\nExample: Digital Photographs\nColour rasters, as seen in digital photographs can be used for social sciences by analysing pixel differences.\n\n\n\n\n\n\n\nElevation Rasters\nElevation rasters are a type of digital representation that use a grid of values to depict the varying heights or elevations of the Earth’s surface across different locations. Each pixel in an elevation raster contains a numerical value representing the height or elevation above a reference point, such as sea level. Elevation rasters are commonly used in geospatial applications, cartography, and terrain modeling. They enable precise visualization and analysis of topographic features, such as mountains, valleys, and slopes, making them essential for tasks like mapmaking, land-use planning, flood risk assessment, and 3D visualization of landscapes.\nExample: Digital Elevation Models (DEMs)\nDEMs are vital for creating topographic maps, analyzing terrain, and conducting spatial modeling. They find applications in urban planning, flood risk assessment, route planning, and 3D visualization. DEMs enable precise representation of Earth’s surface elevation, supporting a wide range of geospatial applications."
  },
  {
    "objectID": "mapraster.html#some-surprising-facts-about-nightlights-data",
    "href": "mapraster.html#some-surprising-facts-about-nightlights-data",
    "title": "Raster Data",
    "section": "Some surprising facts about nightlights data",
    "text": "Some surprising facts about nightlights data\nhttps://yohaniddawela.substack.com/p/some-surprising-facts-about-nightlights"
  },
  {
    "objectID": "mapraster.html#satellite-data-for-social-science",
    "href": "mapraster.html#satellite-data-for-social-science",
    "title": "Raster Data",
    "section": "Satellite data for Social Science",
    "text": "Satellite data for Social Science\nHave a look at\n\nJean, Neal, et al. 2016 “Combining satellite imagery and machine learning to predict poverty.” Science\nHenderson, J. Vernon, Adam Storeygard, and David N. Weil. 2012. Measuring Economic Growth from Outer Space American Economic Review, 102 (2): 994-1028. Replication data"
  },
  {
    "objectID": "mapraster.html#further-readings",
    "href": "mapraster.html#further-readings",
    "title": "Raster data",
    "section": "Further readings",
    "text": "Further readings\n\nRaster Data in R"
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "Navigating the Night",
    "section": "Contact",
    "text": "Contact\n\nElisabetta Pietrostefani - e.pietrostefani [at] liverpool.ac.uk Lecturer in Geographic Data Science, University of Liverpool."
  },
  {
    "objectID": "mapraster_code.html#installing-packages",
    "href": "mapraster_code.html#installing-packages",
    "title": "Lab",
    "section": "Installing Packages",
    "text": "Installing Packages\n\n# Provides various utility functions for R programming.\nlibrary(R.utils)\n# For data manipulation and transformation.\nlibrary(dplyr)\n# Spatial data\nlibrary(sf)\n# Popular data visualization package in R.  \nlibrary(ggplot2)\n# For creating thematic maps \nlibrary(tmap)\n# Color palettes suitable for data visualization, especially for those with color vision deficiencies.\nlibrary(viridis)\n# A collection of color palettes for data visualization.\nlibrary(RColorBrewer)\n# For working with raster data, such as gridded spatial data like satellite imagery or elevation data.\nlibrary(raster)\n# An alternative to the 'raster' package and is used for working with large raster datasets efficiently.\nlibrary(terra)\n# Tools for extracting data from raster layers at exact locations, often used in spatial analysis.\nlibrary(exactextractr)\n# Common methods of the tidyverse packages for objects created with the {terra} package: SpatRaster and SpatVector\nlibrary(tidyterra)\n\nlibrary(osmdata)"
  },
  {
    "objectID": "mapraster_code.html#terrain-data",
    "href": "mapraster_code.html#terrain-data",
    "title": "Lab",
    "section": "Terrain data",
    "text": "Terrain data\n\nImport raster data\nRaster terrain data consists of gridded elevation values that represent the topography of a geographic area. You can download this from the relevant github folder. A good place to download elevation data is Earth Explorer. This video takes you through the download process if you want to try this out yourself.\nWe first import a raster file for elevation.\n\nMENA_lights &lt;- rast(\"data/MENA_noaa_projected.tif\")\n\nPlot it.\n\nplot(MENA_lights) \n\n\n\n\nHave a look at the CRS.\n\ncrs(MENA_lights)\n\n[1] \"PROJCRS[\\\"Africa_Albers_Equal_Area_Conic\\\",\\n    BASEGEOGCRS[\\\"WGS 84\\\",\\n        DATUM[\\\"World Geodetic System 1984\\\",\\n            ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                LENGTHUNIT[\\\"metre\\\",1]]],\\n        PRIMEM[\\\"Greenwich\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        ID[\\\"EPSG\\\",4326]],\\n    CONVERSION[\\\"Albers Equal Area\\\",\\n        METHOD[\\\"Albers Equal Area\\\",\\n            ID[\\\"EPSG\\\",9822]],\\n        PARAMETER[\\\"Latitude of false origin\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8821]],\\n        PARAMETER[\\\"Longitude of false origin\\\",25,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8822]],\\n        PARAMETER[\\\"Latitude of 1st standard parallel\\\",20,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8823]],\\n        PARAMETER[\\\"Latitude of 2nd standard parallel\\\",-23,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8824]],\\n        PARAMETER[\\\"Easting at false origin\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8826]],\\n        PARAMETER[\\\"Northing at false origin\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8827]]],\\n    CS[Cartesian,2],\\n        AXIS[\\\"easting\\\",east,\\n            ORDER[1],\\n            LENGTHUNIT[\\\"metre\\\",1,\\n                ID[\\\"EPSG\\\",9001]]],\\n        AXIS[\\\"northing\\\",north,\\n            ORDER[2],\\n            LENGTHUNIT[\\\"metre\\\",1,\\n                ID[\\\"EPSG\\\",9001]]]]\"\n\n\n\n\nImport the Lebanon shapefile\nImport the Lebanon shapefile, plot it, and verify its Coordinate Reference System (CRS). Is it the same as the raster’s CRS?\n\nMENA_adm1 &lt;- read_sf(\"data/MENA_projected.shp\")\nplot(MENA_adm1$geometry)\n\n\n\ncrs(MENA_adm1)\n\n[1] \"PROJCRS[\\\"Africa_Albers_Equal_Area_Conic\\\",\\n    BASEGEOGCRS[\\\"WGS 84\\\",\\n        ENSEMBLE[\\\"World Geodetic System 1984 ensemble\\\",\\n            MEMBER[\\\"World Geodetic System 1984 (Transit)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G730)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G873)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G1150)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G1674)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G1762)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G2139)\\\"],\\n            ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                LENGTHUNIT[\\\"metre\\\",1]],\\n            ENSEMBLEACCURACY[2.0]],\\n        PRIMEM[\\\"Greenwich\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        ID[\\\"EPSG\\\",4326]],\\n    CONVERSION[\\\"Africa_Albers_Equal_Area_Conic\\\",\\n        METHOD[\\\"Albers Equal Area\\\",\\n            ID[\\\"EPSG\\\",9822]],\\n        PARAMETER[\\\"Latitude of false origin\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8821]],\\n        PARAMETER[\\\"Longitude of false origin\\\",25,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8822]],\\n        PARAMETER[\\\"Latitude of 1st standard parallel\\\",20,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8823]],\\n        PARAMETER[\\\"Latitude of 2nd standard parallel\\\",-23,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8824]],\\n        PARAMETER[\\\"Easting at false origin\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8826]],\\n        PARAMETER[\\\"Northing at false origin\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8827]]],\\n    CS[Cartesian,2],\\n        AXIS[\\\"(E)\\\",east,\\n            ORDER[1],\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n        AXIS[\\\"(N)\\\",north,\\n            ORDER[2],\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n    USAGE[\\n        SCOPE[\\\"Not known.\\\"],\\n        AREA[\\\"Africa\\\"],\\n        BBOX[-35,-25,39,55]],\\n    ID[\\\"ESRI\\\",102022]]\"\n\n\n\n\nReproject the Raster\nAs we are using both the raster and terra packages to handle the raster data it is useful to write terra:: or raster:: in front of the function we are using.\nWe use the terra project() function, we need to define two things:\n\nThe object we want to reproject and\nThe CRS that we want to reproject it to.\n\n\nMENA_lights &lt;- terra::project(MENA_lights, crs(MENA_adm1)) # reporjectig the elevation data to the crs of the Lebanon shapefile\ncrs(MENA_lights)\n\n[1] \"PROJCRS[\\\"Africa_Albers_Equal_Area_Conic\\\",\\n    BASEGEOGCRS[\\\"WGS 84\\\",\\n        ENSEMBLE[\\\"World Geodetic System 1984 ensemble\\\",\\n            MEMBER[\\\"World Geodetic System 1984 (Transit)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G730)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G873)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G1150)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G1674)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G1762)\\\"],\\n            MEMBER[\\\"World Geodetic System 1984 (G2139)\\\"],\\n            ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                LENGTHUNIT[\\\"metre\\\",1]],\\n            ENSEMBLEACCURACY[2.0]],\\n        PRIMEM[\\\"Greenwich\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        ID[\\\"EPSG\\\",4326]],\\n    CONVERSION[\\\"Africa_Albers_Equal_Area_Conic\\\",\\n        METHOD[\\\"Albers Equal Area\\\",\\n            ID[\\\"EPSG\\\",9822]],\\n        PARAMETER[\\\"Latitude of false origin\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8821]],\\n        PARAMETER[\\\"Longitude of false origin\\\",25,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8822]],\\n        PARAMETER[\\\"Latitude of 1st standard parallel\\\",20,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8823]],\\n        PARAMETER[\\\"Latitude of 2nd standard parallel\\\",-23,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8824]],\\n        PARAMETER[\\\"Easting at false origin\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8826]],\\n        PARAMETER[\\\"Northing at false origin\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8827]]],\\n    CS[Cartesian,2],\\n        AXIS[\\\"(E)\\\",east,\\n            ORDER[1],\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n        AXIS[\\\"(N)\\\",north,\\n            ORDER[2],\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n    USAGE[\\n        SCOPE[\\\"Not known.\\\"],\\n        AREA[\\\"Africa\\\"],\\n        BBOX[-35,-25,39,55]],\\n    ID[\\\"ESRI\\\",102022]]\"\n\n\n\n\nCropping and Masking\nCropping and masking are both spatial operations used in raster data analysis.\nCropping:\n\nPurpose: Cropping a raster involves changing the extent of the raster dataset by specifying a new bounding box or geographic area of interest. The result is a new raster that covers only the specified region.\nTypical Use: Cropping is commonly used when you want to reduce the size of a raster dataset to focus on a smaller geographic area of interest while retaining all the original data values within that area.\n\nMasking:\n\nPurpose: Applying a binary mask to the dataset. The mask is typically a separate raster or polygon layer where certain areas are designated as “masked” (1) or “unmasked” (0).\nTypical Use: Masking is used when you want to extract or isolate specific areas or features within a raster dataset. For example, you might use a mask to extract land cover information within the boundaries of a protected national park.\n\nIn many cases, these cropping and masking are executed one after the other because it is computationally easier to crop when dealing with large datasets, and then masking.\n\nMENA_lights_crop &lt;- crop(MENA_lights, extent(MENA_adm1))\nMENA_lights_mask &lt;- mask(MENA_lights_crop, MENA_adm1)\n\n\n\nPlot elevation\n\nplot(MENA_lights_mask)\nplot(MENA_adm1$geometry, col= NA, add=T)\n\n\n\n\nLet’s improve this a bit. Remember that there is a lot we can do with ColorBrewer.\n\nplottmap\n\n\n\npal = rev(brewer.pal(6,\"YlGnBu\"))\nplot(MENA_lights_mask, breaks=c(0,10,20,30,40,Inf), col=pal)\nplot(MENA_adm1$geometry, col= NA, add=T)\n\n\n\n\n\n\n\n# Define the palette\npal = rev(brewer.pal(6,\"YlGnBu\"))\n\n# Create the base map\ntm_shape(MENA_lights_mask) +\n  tm_raster(breaks = c(0,10,20,30,40,Inf),\n            palette = pal) +  # Plot the raster with breaks and palette\n  tm_shape(MENA_adm1) +\n  tm_borders(lwd = 1, col = \"darkgrey\") +  # Add borders to the administrative boundaries\ntm_layout(frame = FALSE, legend.outside = TRUE, legend.outside.position = \"right\", \n          title = \"Night light intensity\")  # Remove frame\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestions\n\n\n\nQuestions to ask yourself about how you can improve these maps, going back to geo-visualisation and choropleths.\n\nWhat are the logical breaks for night lights data?\nWhat should the colours be?\nHave a look at some of the tmap documentation to improve your map further .\n\n\n\n\n\nSpatial join with vector data\n\n# Subset MENA_adm1 to select only Egypt\nEgypt &lt;- MENA_adm1 %&gt;%\n  filter(name == \"Egypt\")\n\n# Crop MENA_adm1 raster to Egypt\nEgypt_lights_mask &lt;- crop(MENA_lights_mask, extent(Egypt))\n\n\n# creating bounding box for Lagos\negypt_bb &lt;- getbb(\"Cairo Egypt\")\ncairo &lt;- opq(bbox = egypt_bb)\n\namenities &lt;- cairo %&gt;%\n   add_osm_feature(key = \"amenity\", value = c(\"hospital\")) %&gt;%\n   osmdata_sf ()\n\n# Extracting points from the OSM data\namenities_points &lt;- amenities$osm_points\n\n# Plotting\nggplot() + \n  geom_sf(data = amenities$osm_points, fill = 'orange') + \n  geom_spatraster(data=Egypt_lights_mask, alpha = 0.5) +\n  coord_sf(xlim = c(30.852356, 31.717529), ylim = c(29.699982, 30.473532)) + theme_minimal()\n\n&lt;SpatRaster&gt; resampled to 501014 cells for plotting\n\n\n\n\n# Plotting\nggplot() + \n  geom_sf(data = amenities$osm_points, aes(color = \"Hospitals\"), fill = 'red', size = 1, stroke = 1, color = \"darkred\") + \n  geom_spatraster(data = Egypt_lights_mask, aes(fill = ..value..), alpha = 0.5) +\n  scale_fill_gradient(low = \"black\", high = \"yellow\", name = \"Night Lights\") +\n  coord_sf(xlim = c(30.852356, 31.717529), ylim = c(29.699982, 30.473532)) + \n  labs(title = \"Distribution of Hospitals and Night Lights in Egypt\",\n       x = \"Longitude\", y = \"Latitude\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n&lt;SpatRaster&gt; resampled to 501014 cells for plotting\n\n\nWarning: The dot-dot notation (`..value..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(value)` instead.\n\n\n\n\n\nhttps://dieghernan.github.io/tidyterra/reference/geom_spatraster.html\nYou might want to extract values from a raster data set, and then map them eith in a vector sf framework or extract them to analyse them statistically. If it therefore very useful to know hoe to extract:\n\n# Using the 'raster::extract' function, it calculates the elevation values at the coordinates of the points. 'elevation' is a raster layer, and 'households' is point data representing household locations.\nlights_hospitals &lt;- raster::extract(Egypt_lights_mask,\n                                amenities_points)\n\nWarning: [extract] transforming vector data to the CRS of the raster\n\n# Attach elevation at each point to the original housesales dataframe\nlights_hospitals &lt;- cbind(amenities_points, lights_hospitals)\n\n# Keep only specified columns\nlights_hospitals &lt;- lights_hospitals %&gt;%\n  select(MENA_noaa_projected, ID, geometry, osm_id)\n\n# Check out the data\nhead(lights_hospitals)\n\nSimple feature collection with 6 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 31.2256 ymin: 30.06897 xmax: 31.29417 ymax: 30.08557\nGeodetic CRS:  WGS 84\n          MENA_noaa_projected ID    osm_id                  geometry\n32538148                   63  1  32538148 POINT (31.29417 30.06897)\n272580023                  63  2 272580023 POINT (31.22562 30.08249)\n272580024                  63  3 272580024  POINT (31.2256 30.08322)\n272580025                  63  4 272580025 POINT (31.22574 30.08381)\n272580026                  63  5 272580026 POINT (31.22597 30.08485)\n272580027                  63  6 272580027 POINT (31.22584 30.08557)\n\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure all your data is in the same CRS, otherwise the raster::extract function will not work properly.\nYou should not be seeing NAs, if you do you should use the terra project() function."
  }
]